#cloud-config
---
hostname: kube-node1
users:
  - name: core
    ssh-authorized-keys: 
      - ssh-rsa <SSH_PUBLIC_KEY> 
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    groups: sudo
    shell: /bin/bash

write_files:
  - path: /etc/network-environment 
    owner: root
    permissions: 0755
    content: |
      #! /usr/bin/bash
      # This node's IPv4 address
      DEFAULT_IPV4=<DEFAULT_IPV4>

      # The kubernetes master IP
      KUBERNETES_MASTER=<KUBERNETES_MASTER>

      # Location of etcd cluster used by Calico.  By default, this uses the etcd
      # instance running on the Kubernetes Master
      ETCD_AUTHORITY=${KUBERNETES_MASTER}:4001
      
      # Location from which to download the Kubernetes binaries
      KUBERNETES_IP=<KUBERNETES_IP>

  - path: /home/core/kubernetes-download.sh
    owner: root
    permissions: 0755
    content: |
      #! /usr/bin/bash
      # Download kubernetes binaries
      /usr/bin/wget -N -P "/home/core" "http://$KUBERNETES_IP/kubectl"
      /usr/bin/wget -N -P "/home/core" "http://$KUBERNETES_IP/kubernetes"
      /usr/bin/wget -N -P "/home/core" "http://$KUBERNETES_IP/kube-proxy"
      /usr/bin/wget -N -P "/home/core" "http://$KUBERNETES_IP/kubelet"
      chmod +x /home/core/*
      exit 0

  - path: /home/core/calico-download.sh
    owner: root
    permissions: 0755
    content: |
      #! /usr/bin/bash
      # Download calicoctl and the calico kubernetes networking plugin.
      /usr/bin/wget -N -P "/home/core" "https://github.com/Metaswitch/calico-docker/releases/download/v0.4.7/calicoctl"

      # TODO: Currently using my own fork of the plugin.
      #/usr/bin/wget -N -P "/home/core" "https://github.com/Metaswitch/calico-docker/releases/download/v0.4.2/calico_kubernetes"
      /usr/bin/wget -N -P "/home/core" "http://172.24.114.228/calico_kubernetes"
      chmod +x /home/core/calicoctl

      # Move the networking plugin into the networking plugins directory.  This directory is passed to the kubelet so it 
      # can find the plugin.
      mkdir -p /home/core/kubelet-net-plugins/calico
      mv /home/core/calico_kubernetes /home/core/kubelet-net-plugins/calico/calico
      chmod +x /home/core/kubelet-net-plugins/calico/calico
      
      # FIXME: Temporary fix to get around hardcoded calicoctl location in the calico networking plugin.
      sudo mkdir -p /home/vagrant
      ln -s /home/core/calicoctl /home/vagrant/calicoctl

      exit 0

  - path: /home/core/calico-node.sh
    owner: root
    permissions: 0755
    content: |
      #! /usr/bin/bash
      sudo modprobe xt_set
      sudo modprobe ip6_tables
      sudo ETCD_AUTHORITY=$2 /home/core/calicoctl node --ip=$1
      # FIXME: Instead, configure default docker pool
      ETCD_AUTHORITY=$2 /home/core/calicoctl pool add 172.17.0.0/16
      touch /home/calico-node-$1-$2
      exit 0

  - path: /etc/profile.d/opt-path.sh
    owner: root
    permissions: 0755
    content: |
      #! /usr/bin/bash
      PATH=$PATH:/home/core

coreos:
  update:
    reboot-strategy: off

  units:
    - name: get-kube-tools.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Downloads Kubernetes binaries 
        After=network-online.service
        [Service]
        EnvironmentFile=/etc/network-environment
        ExecStartPre=-/usr/bin/mkdir -p /home/core
        ExecStart=/home/core/kubernetes-download.sh
        RemainAfterExit=yes
        Type=oneshot

    - name: get-calico-tools.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Downloads the Calico binaries
        After=network-online.service
        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /home/core
        ExecStart=/home/core/calico-download.sh
        RemainAfterExit=yes
        Type=oneshot

    - name: calico-node.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=calicoctl node
        After=get-calico-tools.service
        [Service]
        EnvironmentFile=/etc/network-environment
        User=root
        PermissionsStartOnly=true
        ExecStart=/home/core/calico-node.sh $DEFAULT_IPV4 $ETCD_AUTHORITY
        RemainAfterExit=yes
        Type=oneshot

    - name: kube-proxy.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        After=calico-node.service
        [Service]
        EnvironmentFile=/etc/network-environment
        ExecStart=/home/core/kube-proxy --master=http://${KUBERNETES_MASTER}:8080 --logtostderr=true
        Restart=always
        RestartSec=10

    - name: kube-kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        After=calico-node.service
        [Service]
        EnvironmentFile=/etc/network-environment
        ExecStart=/home/core/kubelet \
        --v=5 \
        --address=0.0.0.0 \
        --port=10250 \
        --hostname_override=${DEFAULT_IPV4} \
        --api_servers=${KUBERNETES_MASTER}:8080 \
        --healthz_bind_address=0.0.0.0 \
        --healthz_port=10248 \
        --network_plugin=calico \
        --network_plugin_dir=/home/core/kubelet-net-plugins \
        --logtostderr=true
        Restart=always
        RestartSec=10
